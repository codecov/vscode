{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "https://json.schemastore.org/codecov",
    "title": "Codecov configuration file",
    "description": "The Codecov configuration file is used to configure your repository's Codecov experience.",
    "type": "object",
    "properties": {
        "codecov": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "pattern": "https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)",
                    "title": "Url",
                    "description": "A URL you want to send notifications to. [More information](https://docs.codecov.com/docs/notifications#standard-notification-fields)."
                },
                "token": {
                    "type": "string",
                    "title": "Token",
                    "description": "The repository upload token. [More information](https://docs.codecov.com/docs/codecov-uploader#upload-token)."
                },
                "slug": {
                    "type": "string",
                    "title": "Slug",
                    "description": "Self Hosted only - specify a slug manually"
                },
                "bot": {
                    "type": "string",
                    "title": "Bot",
                    "description": "The username you want to use for Codecov operations. [More information](https://docs.codecov.com/docs/team-bot)."
                },
                "branch": {
                    "type": "string",
                    "coerce": "branch_normalize",
                    "title": "Branch",
                    "description": "Specify a branch manually in your YAML"
                },
                "ci": {
                    "type": "array",
                    "title": "Ci",
                    "description": "Additional CI provider URLs you want Codecov to recognize. [More information](https://docs.codecov.com/docs/detecting-ci-services).",
                    "items": {
                        "type": "string"
                    }
                },
                "assume_all_flags": {
                    "title": "Assume all flags",
                    "description": "Deprecated",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "strict_yaml_branch": {
                    "type": "string",
                    "title": "Strict yaml branch",
                    "description": "Specify a branch you want Codecov to always only read the YAML from. [More information](https://docs.codecov.io/docs/codecov-yaml#section-restricting-changes)."
                },
                "max_report_age": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        },
                        {
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    ],
                    "title": "Max report age",
                    "description": "The age you want coverage reports to expire at, or if you want to disable this check. Expired reports will not be processed by CodeCov. [More information](https://docs.codecov.io/docs/codecov-yaml#section-expired-reports)."
                },
                "disable_default_path_fixes": {
                    "title": "Disable default path fixes",
                    "description": "Should Codecov's default path fixes be disabled? [More information](https://docs.codecov.io/docs/fixing-paths). Options include: 'True', 'False', 'yes', 'no', 'on', 'off'.",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "require_ci_to_pass": {
                    "title": "Require ci to pass",
                    "description": "Should Codecov wait for all other statuses to pass before sending its status? Options include: 'True', 'False', 'yes', 'no', 'on', 'off'",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "allow_coverage_offsets": {
                    "title": "Allow coverage offsets",
                    "description": "Codecov will calculate a coverage diff based on the last coverage found and the diff to the base commit. [More information](https://.codecov.com//comparing-commits#comparing-pull-request-base-reports). Options include: 'True', 'False', 'yes', 'no', 'on', 'off'.",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "allow_pseudo_compare": {
                    "title": "Allow pseudo compare",
                    "description": "Allow Codecov to find an alternative base if the base of comparison has no coverage. [More information](https://.codecov.com//comparing-commits#comparing-pull-request-base-reports). Options include: 'True', 'False', 'yes', 'no', 'on', 'off'.",
                    "enum": [
                        true,
                        false,
                        "yes",
                        "no",
                        "on",
                        "off"
                    ]
                },
                "archive": {
                    "type": "object",
                    "properties": {
                        "uploads": {
                            "title": "Uploads",
                            "description": "Disable Codecov cloud report archiving? [More information](https://.codecov.com/v4.6//codecovyml-reference#codecov-cloud-report-archiving). Options include: 'True', 'False', 'yes', 'no', 'on', 'off'.",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "Archive",
                    "description": "Configure cloud report archiving."
                },
                "notify": {
                    "type": "object",
                    "properties": {
                        "after_n_builds": {
                            "type": "integer",
                            "minimum": 0,
                            "title": "After n builds",
                            "description": "How many uploaded reports Codecov should wait to receive before sending statuses? [More information](https://.codecov.io//notifications#section-preventing-notifications-until-after-n-builds)."
                        },
                        "countdown": {
                            "type": "integer",
                            "title": "Countdown",
                            "description": "Deprecated"
                        },
                        "delay": {
                            "type": "integer",
                            "title": "Delay",
                            "description": "Deprecated"
                        },
                        "wait_for_ci": {
                            "title": "Wait for ci",
                            "description": "Wait for CI to finish sending notifications? [More information](https://.codecov.com//codecovyml-reference#codecovnotifywait_for_ci). Options include: 'True', 'False', 'yes', 'no', 'on', 'off'.",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "require_ci_to_pass": {
                            "title": "Require ci to pass",
                            "description": "Wait for all CI statuses to pass? [More information](https://.codecov.com//codecovyml-reference#codecovrequire_ci_to_pass). Options include: 'True', 'False', 'yes', 'no', 'on', 'off'.",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "manual_trigger": {
                            "title": "Manual trigger",
                            "description": "",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "notify_error": {
                            "meta": {
                                "description": "This option lets the user toggle whether they want to block the regular comment message and replace it with an error message in the comment if any of the upload processing tasks fail."
                            },
                            "title": "Notify error",
                            "description": "",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "Notify",
                    "description": "Configure how Codecov sends a PR comment"
                },
                "ui": {
                    "type": "object",
                    "properties": {
                        "hide_density": {
                            "title": "Hide density",
                            "description": "Deprecated",
                            "anyOf": [
                                {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "hide_complexity": {
                            "title": "Hide complexity",
                            "description": "Deprecated",
                            "anyOf": [
                                {
                                    "enum": [
                                        true,
                                        false,
                                        "yes",
                                        "no",
                                        "on",
                                        "off"
                                    ]
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "hide_contexual": {
                            "title": "Hide contexual",
                            "description": "Deprecated",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "hide_sunburst": {
                            "title": "Hide sunburst",
                            "description": "Deprecated",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        "hide_search": {
                            "title": "Hide search",
                            "description": "Deprecated",
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        }
                    },
                    "title": "Ui",
                    "description": "Deprecated"
                }
            },
            "title": "Codecov",
            "description": "Configure general CodeCov settings. [More information](https://.codecov.com//codecov-yaml)."
        },
        "coverage": {
            "type": "object",
            "properties": {
                "precision": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 99,
                    "title": "Precision",
                    "description": "What precision do you want the coverage value to be? [More information](https://.codecov.com//codecovyml-reference#coverageprecision)."
                },
                "round": {
                    "enum": [
                        "down",
                        "up",
                        "nearest"
                    ],
                    "title": "Round",
                    "description": "Configure how you want Codecov to round your coverage numbers. Options include: 'down', 'up', 'nearest'."
                },
                "range": {
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "pattern": "(\\d+)(\\.\\d+)?%?|(\\d+)...(\\d+)"
                        },
                        {
                            "type": "array",
                            "items": [
                                {
                                    "type": "integer"
                                }
                            ],
                            "minItems": 1,
                            "maxItems": 2
                        }
                    ],
                    "title": "Range",
                    "description": "Configure how you want Codecov to color your coverage. Coverage below the first number will be red, coverage between each number yellow, and coverage above the second number will be green. Format: xx...yy "
                },
                "notify": {
                    "type": "object",
                    "properties": {
                        "irc": {
                            "type": "object",
                            "title": "Irc",
                            "description": "Deprecated",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "channel": {
                                        "type": "string",
                                        "title": "Channel",
                                        "description": "Deprecated"
                                    },
                                    "server": {
                                        "type": "string",
                                        "title": "Server",
                                        "description": "Deprecated"
                                    },
                                    "password": {
                                        "type": "string",
                                        "coerce": "secret",
                                        "title": "Password",
                                        "description": "Deprecated"
                                    },
                                    "nickserv_password": {
                                        "type": "string",
                                        "coerce": "secret",
                                        "title": "Nickserv password",
                                        "description": "Deprecated"
                                    },
                                    "notice": {
                                        "title": "Notice",
                                        "description": "Deprecated",
                                        "enum": [
                                            true,
                                            false,
                                            "yes",
                                            "no",
                                            "on",
                                            "off"
                                        ]
                                    },
                                    "url": {
                                        "type": "string",
                                        "coerce": "secret",
                                        "title": "Url",
                                        "description": "Deprecated"
                                    },
                                    "branches": {
                                        "type": "array",
                                        "title": "Branches",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "nullable": true,
                                            "coerce": "branch_name"
                                        }
                                    },
                                    "threshold": {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ],
                                        "pattern": "(\\d+)(\\.\\d+)?%?",
                                        "coerce": "percentage_to_number",
                                        "title": "Threshold",
                                        "description": "Deprecated"
                                    },
                                    "message": {
                                        "type": "string",
                                        "title": "Message",
                                        "description": "Deprecated"
                                    },
                                    "flags": {
                                        "type": "array",
                                        "title": "Flags",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[^\\'\\\"]{1,1024}$"
                                        }
                                    },
                                    "base": {
                                        "enum": [
                                            "parent",
                                            "pr",
                                            "auto"
                                        ],
                                        "title": "Base",
                                        "description": "Deprecated"
                                    },
                                    "only_pulls": {
                                        "title": "Only pulls",
                                        "description": "Deprecated",
                                        "enum": [
                                            true,
                                            false,
                                            "yes",
                                            "no",
                                            "on",
                                            "off"
                                        ]
                                    },
                                    "paths": {
                                        "type": "array",
                                        "title": "Paths",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "coerce": "regexify_path_pattern"
                                        }
                                    }
                                },
                                "additionalProperties": false
                            },
                            "unevaluatedProperties": false
                        },
                        "slack": {
                            "type": "object",
                            "title": "Slack",
                            "description": "This is the path for Slack notifications to fire. Below \"slack:\" start your configuration with an indented \"default:\". Available keys after \"default:\" are URL, Threshold, Only_pulls, Branches, Flags, and Paths. [Slack notification](https://.codecov.com//notifications#slack)",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "attachments": {
                                        "type": "string",
                                        "title": "Attachments",
                                        "description": "These are attachments you can make as strings to the Slack notifier with the pattern: ^([^,]+)(,[^,]+)*$",
                                        "pattern": "^([^,]+)(,[^,]+)*$"
                                    },
                                    "url": {
                                        "type": "string",
                                        "coerce": "secret",
                                        "title": "Url",
                                        "description": "Used to store the Slack hooks URL associated with your Slack notifier: https://hooks.slack.com/services/abc/123"
                                    },
                                    "branches": {
                                        "type": "array",
                                        "title": "Branches",
                                        "description": "Used to store the branch(es) that will report code coverage. Defaults to all branches. Each new branch is a new indented line",
                                        "items": {
                                            "type": "string",
                                            "nullable": true,
                                            "coerce": "branch_name"
                                        }
                                    },
                                    "threshold": {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ],
                                        "pattern": "(\\d+)(\\.\\d+)?%?",
                                        "coerce": "percentage_to_number",
                                        "title": "Threshold",
                                        "description": "The coverage threshold on which you would like to send a notification. If the coverage changes by more than the amount in the threshold field, a notification will be sent, otherwise, it will not. Default to `None`, which means that notifications will always be sent regardless of coverage change amount."
                                    },
                                    "message": {
                                        "type": "string",
                                        "title": "Message",
                                        "description": "A customizable message to send in the notification"
                                    },
                                    "flags": {
                                        "type": "array",
                                        "title": "Flags",
                                        "description": "Specify the flags for which you would like notifications to be sent. Defaults to all flags. [Read more about flags](https://.codecov.com//flags). Add a new, indented line for each flag. Regular expressions are permitted with the pattern: ^[\\w\\.\\-]{1,45}$",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[^\\'\\\"]{1,1024}$"
                                        }
                                    },
                                    "base": {
                                        "enum": [
                                            "parent",
                                            "pr",
                                            "auto"
                                        ],
                                        "title": "Base",
                                        "description": "The base commit type to which you would like to send notifications. Options include: 'parent', 'pr', and 'auto'. parent: compare the commit being notified on, to its direct parent. 'pr': compare the commit being notified on, to the base of a PR if the commit is in a PR. 'auto': automatically choose the appropriate comparison. If the commit being notified on is in a PR, pr will be used, otherwise parent will be used. This is the default."
                                    },
                                    "only_pulls": {
                                        "title": "Only pulls",
                                        "description": "True / False binary to specify if you only want notifications to fire on pull requests (vs. individual commits on the branch). Default is `false`, which will notify on all new commits.",
                                        "enum": [
                                            true,
                                            false,
                                            "yes",
                                            "no",
                                            "on",
                                            "off"
                                        ]
                                    },
                                    "paths": {
                                        "type": "array",
                                        "title": "Paths",
                                        "description": "Only send a notification if the specified file paths change. Augments the flags setting. Add a new, indented line for each path. If both flags and paths are specified, a notification will be triggered if files covered by the supplied flags OR paths change.",
                                        "items": {
                                            "type": "string",
                                            "coerce": "regexify_path_pattern"
                                        }
                                    }
                                },
                                "additionalProperties": false
                            },
                            "unevaluatedProperties": false
                        },
                        "gitter": {
                            "type": "object",
                            "title": "Gitter",
                            "description": "This is the root for Gitter notifications to fire. Below \"gitter:\" start your configuration with an indented \"default:\". Available keys after \"default:\" are URL, Threshold, Only_pulls, Branches, Flags, and Paths. [Gitter notification ](https://.codecov.com//notifications#gitter)",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "coerce": "secret",
                                        "title": "Url",
                                        "description": "Used to store the Gitter hooks URL associated with your Gitter notifier: \"https://webhooks.gitter.im/e/9d1957r0a481787c756z\""
                                    },
                                    "branches": {
                                        "type": "array",
                                        "title": "Branches",
                                        "description": "Used to store the branch(es) that will report code coverage. Defaults to all branches. Each new branch is a new indented line",
                                        "items": {
                                            "type": "string",
                                            "nullable": true,
                                            "coerce": "branch_name"
                                        }
                                    },
                                    "threshold": {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ],
                                        "pattern": "(\\d+)(\\.\\d+)?%?",
                                        "coerce": "percentage_to_number",
                                        "title": "Threshold",
                                        "description": "The coverage threshold on which you would like to send a notification. If the coverage changes by more than the amount in the threshold field, a notification will be sent, otherwise, it will not. Default to `None`, which means that notifications will always be sent regardless of coverage change amount."
                                    },
                                    "message": {
                                        "type": "string",
                                        "title": "Message",
                                        "description": "A customizable message to send in the notification"
                                    },
                                    "flags": {
                                        "type": "array",
                                        "title": "Flags",
                                        "description": "Specify the flags for which you would like notifications to be sent. Defaults to all flags. [Read more about flags](https://.codecov.com//flags). Add a new, indented line for each flag. Regular expressions are permitted with the pattern: ^[\\w\\.\\-]{1,45}$",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[^\\'\\\"]{1,1024}$"
                                        }
                                    },
                                    "base": {
                                        "enum": [
                                            "parent",
                                            "pr",
                                            "auto"
                                        ],
                                        "title": "Base",
                                        "description": "The base commit type to which you would like to send notifications. Options include: 'parent', 'pr', and 'auto'. parent: compare the commit being notified on, to its direct parent. 'pr': compare the commit being notified on, to the base of a PR if the commit is in a PR. 'auto': automatically choose the appropriate comparison. If the commit being notified on is in a PR, pr will be used, otherwise parent will be used. This is the default."
                                    },
                                    "only_pulls": {
                                        "title": "Only pulls",
                                        "description": "True / False binary to specify if you only want notifications to fire on pull requests (vs. individual commits on the branch). Default is `false`, which will notify on all new commits.",
                                        "enum": [
                                            true,
                                            false,
                                            "yes",
                                            "no",
                                            "on",
                                            "off"
                                        ]
                                    },
                                    "paths": {
                                        "type": "array",
                                        "title": "Paths",
                                        "description": "Only send a notification if the specified file paths change. Augments the flags setting. Add a new, indented line for each path. If both flags and paths are specified, a notification will be triggered if files covered by the supplied flags OR paths change.",
                                        "items": {
                                            "type": "string",
                                            "coerce": "regexify_path_pattern"
                                        }
                                    }
                                },
                                "additionalProperties": false
                            },
                            "unevaluatedProperties": false
                        },
                        "hipchat": {
                            "type": "object",
                            "title": "Hipchat",
                            "description": "",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "card": {
                                        "title": "Card",
                                        "description": "Deprecated",
                                        "enum": [
                                            true,
                                            false,
                                            "yes",
                                            "no",
                                            "on",
                                            "off"
                                        ]
                                    },
                                    "notify": {
                                        "title": "Notify",
                                        "description": "Deprecated",
                                        "enum": [
                                            true,
                                            false,
                                            "yes",
                                            "no",
                                            "on",
                                            "off"
                                        ]
                                    },
                                    "url": {
                                        "type": "string",
                                        "coerce": "secret",
                                        "title": "Url",
                                        "description": "Deprecated"
                                    },
                                    "branches": {
                                        "type": "array",
                                        "title": "Branches",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "nullable": true,
                                            "coerce": "branch_name"
                                        }
                                    },
                                    "threshold": {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ],
                                        "pattern": "(\\d+)(\\.\\d+)?%?",
                                        "coerce": "percentage_to_number",
                                        "title": "Threshold",
                                        "description": "Deprecated"
                                    },
                                    "message": {
                                        "type": "string",
                                        "title": "Message",
                                        "description": "Deprecated"
                                    },
                                    "flags": {
                                        "type": "array",
                                        "title": "Flags",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[^\\'\\\"]{1,1024}$"
                                        }
                                    },
                                    "base": {
                                        "enum": [
                                            "parent",
                                            "pr",
                                            "auto"
                                        ],
                                        "title": "Base",
                                        "description": "Deprecated"
                                    },
                                    "only_pulls": {
                                        "title": "Only pulls",
                                        "description": "Deprecated",
                                        "enum": [
                                            true,
                                            false,
                                            "yes",
                                            "no",
                                            "on",
                                            "off"
                                        ]
                                    },
                                    "paths": {
                                        "type": "array",
                                        "title": "Paths",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "coerce": "regexify_path_pattern"
                                        }
                                    }
                                },
                                "additionalProperties": false
                            },
                            "unevaluatedProperties": false
                        },
                        "webhook": {
                            "type": "object",
                            "title": "Webhook",
                            "description": "This is the root for making a webhook for notifications outside of Slack or Gitter. Below \"webhook:\" start your configuration with an indented \"default:\". Available keys after \"default:\" are URL, Threshold, Only_pulls, Branches, Flags, and Paths. [General notification ](https://.codecov.com//notifications#standard-notification-fields)",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "string",
                                        "coerce": "secret",
                                        "title": "Url",
                                        "description": "Used to store the generalized webhook URL associated with your notifier"
                                    },
                                    "branches": {
                                        "type": "array",
                                        "title": "Branches",
                                        "description": "Used to store the branch(es) that will report code coverage. Defaults to all branches. Each new branch is a new indented line",
                                        "items": {
                                            "type": "string",
                                            "nullable": true,
                                            "coerce": "branch_name"
                                        }
                                    },
                                    "threshold": {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ],
                                        "pattern": "(\\d+)(\\.\\d+)?%?",
                                        "coerce": "percentage_to_number",
                                        "title": "Threshold",
                                        "description": "The coverage threshold on which you would like to send a notification. If the coverage changes by more than the amount in the threshold field, a notification will be sent, otherwise, it will not. Default to `None`, which means that notifications will always be sent regardless of coverage change amount."
                                    },
                                    "message": {
                                        "type": "string",
                                        "title": "Message",
                                        "description": "A customizable message to send in the notification"
                                    },
                                    "flags": {
                                        "type": "array",
                                        "title": "Flags",
                                        "description": "Specify the flags for which you would like notifications to be sent. Defaults to all flags. [Read more about flags](https://.codecov.com//flags). Add a new, indented line for each flag. Regular expressions are permitted with the pattern: ^[\\w\\.\\-]{1,45}$",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[^\\'\\\"]{1,1024}$"
                                        }
                                    },
                                    "base": {
                                        "enum": [
                                            "parent",
                                            "pr",
                                            "auto"
                                        ],
                                        "title": "Base",
                                        "description": "The base commit type to which you would like to send notifications. Options include: 'parent', 'pr', and 'auto'. parent: compare the commit being notified on, to its direct parent. 'pr': compare the commit being notified on, to the base of a PR if the commit is in a PR. 'auto': automatically choose the appropriate comparison. If the commit being notified on is in a PR, pr will be used, otherwise parent will be used. This is the default."
                                    },
                                    "only_pulls": {
                                        "title": "Only pulls",
                                        "description": "True / False binary to specify if you only want notifications to fire on pull requests (vs. individual commits on the branch). Default is `false`, which will notify on all new commits.",
                                        "enum": [
                                            true,
                                            false,
                                            "yes",
                                            "no",
                                            "on",
                                            "off"
                                        ]
                                    },
                                    "paths": {
                                        "type": "array",
                                        "title": "Paths",
                                        "description": "Only send a notification if the specified file paths change. Augments the flags setting. Add a new, indented line for each path. If both flags and paths are specified, a notification will be triggered if files covered by the supplied flags OR paths change.",
                                        "items": {
                                            "type": "string",
                                            "coerce": "regexify_path_pattern"
                                        }
                                    }
                                },
                                "additionalProperties": false
                            },
                            "unevaluatedProperties": false
                        },
                        "email": {
                            "type": "object",
                            "title": "Email",
                            "description": "Deprecated",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "to": {
                                        "type": "array",
                                        "title": "To",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "coerce": "secret"
                                        }
                                    },
                                    "layout": {
                                        "type": "string",
                                        "title": "Layout",
                                        "description": "Deprecated",
                                        "pattern": "^([^,]+)(,[^,]+)*$"
                                    },
                                    "url": {
                                        "type": "string",
                                        "coerce": "secret",
                                        "title": "Url",
                                        "description": "Deprecated"
                                    },
                                    "branches": {
                                        "type": "array",
                                        "title": "Branches",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "nullable": true,
                                            "coerce": "branch_name"
                                        }
                                    },
                                    "threshold": {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ],
                                        "pattern": "(\\d+)(\\.\\d+)?%?",
                                        "coerce": "percentage_to_number",
                                        "title": "Threshold",
                                        "description": "Deprecated"
                                    },
                                    "message": {
                                        "type": "string",
                                        "title": "Message",
                                        "description": "Deprecated"
                                    },
                                    "flags": {
                                        "type": "array",
                                        "title": "Flags",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "pattern": "^[^\\'\\\"]{1,1024}$"
                                        }
                                    },
                                    "base": {
                                        "enum": [
                                            "parent",
                                            "pr",
                                            "auto"
                                        ],
                                        "title": "Base",
                                        "description": "Deprecated"
                                    },
                                    "only_pulls": {
                                        "title": "Only pulls",
                                        "description": "Deprecated",
                                        "enum": [
                                            true,
                                            false,
                                            "yes",
                                            "no",
                                            "on",
                                            "off"
                                        ]
                                    },
                                    "paths": {
                                        "type": "array",
                                        "title": "Paths",
                                        "description": "Deprecated",
                                        "items": {
                                            "type": "string",
                                            "coerce": "regexify_path_pattern"
                                        }
                                    }
                                },
                                "additionalProperties": false
                            },
                            "unevaluatedProperties": false
                        }
                    },
                    "title": "Notify",
                    "description": "A collection of notification tools for sending coverage data to services outside of Git. Out-of-the-box tools are Slack and Gitter, or you can make your own webhook. Available keys are slack, gitter, webhook, and after_n_builds. [Read about Codecov notifications here](https://.codecov.com//notifications)."
                },
                "status": {
                    "oneOf": [
                        {
                            "enum": [
                                true,
                                false,
                                "yes",
                                "no",
                                "on",
                                "off"
                            ]
                        },
                        {
                            "type": "object",
                            "properties": {
                                "default_rules": {
                                    "type": "object",
                                    "properties": {
                                        "flag_coverage_not_uploaded_behavior": {
                                            "enum": [
                                                "include",
                                                "exclude",
                                                "pass"
                                            ],
                                            "title": "Flag coverage not uploaded behavior",
                                            "description": "Determines how we handle status checks for which no flag coverage has been newly uploaded on a commit. This includes status checks where flags have carried forward coverage (since coverage was not newly uploaded), as well as flags for which coverage is missing entirely. This is useful if, for example, you're working on a project in a monorepo and don't want to see status checks related to other projects. Note that this only applies to status checks that specify flags. If there are no flags on a check, the status check will be processed as usual.  Options include: a.) 'include': (default) All the status checks defined in the YAML file will be processed and sent as normal b.) 'exclude': Status checks that haven't newly uploaded any flag coverage will not be sent c.) 'pass': Status checks that haven't newly uploaded any flag coverage will be passed automatically."
                                        },
                                        "carryforward_behavior": {
                                            "enum": [
                                                "include",
                                                "exclude",
                                                "pass"
                                            ],
                                            "title": "Carryforward behavior",
                                            "description": "Determines how we handle status checks for which flags that were carried forward. This is useful if, for example, you're working on a project in a monorepo and don't want to see status checks related to other projects. Note that this only applies to status checks that specify flags. If there are no flags on a check, the status check will be processed as usual.  Options include: a.) 'include': (default) All the status checks defined in the YAML file will be processed and sent as normal b.) 'exclude': Status checks that carried forward coverage will not be included c.) 'pass': Status checks that have carried forward coverage will pass automatically."
                                        }
                                    },
                                    "title": "Default rules",
                                    "description": "A path of the `status` configuration that provides advanced configuration for repos not uploading all of their coverage on every commit. Keys available are `flag_coverage_not_uploaded_behavior` and `carryforward_behavior`."
                                },
                                "project": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "target": {
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "number"
                                                            }
                                                        ],
                                                        "coerce": "percentage_to_number_or_auto",
                                                        "title": "Target",
                                                        "description": "Set the project status check to a number (80), percent (80%), or `auto`. This specifies the minimum coverage number accepted by this project status check. Setting to `auto` will compare coverage against the BASE commit.",
                                                        "anyOf": [
                                                            {
                                                                "enum": [
                                                                    "auto"
                                                                ]
                                                            },
                                                            {
                                                                "pattern": "(\\d+)(\\.\\d+)?%?"
                                                            }
                                                        ]
                                                    },
                                                    "include_changes": {
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "number"
                                                            }
                                                        ],
                                                        "coerce": "percentage_to_number_or_auto",
                                                        "title": "Include changes",
                                                        "description": "Deprecated",
                                                        "anyOf": [
                                                            {
                                                                "enum": [
                                                                    "auto"
                                                                ]
                                                            },
                                                            {
                                                                "pattern": "(\\d+)(\\.\\d+)?%?"
                                                            }
                                                        ]
                                                    },
                                                    "threshold": {
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "number"
                                                            }
                                                        ],
                                                        "pattern": "(\\d+)(\\.\\d+)?%?",
                                                        "coerce": "percentage_to_number",
                                                        "title": "Threshold",
                                                        "description": "Allow coverage to drop by x% below the target and still pass the status check."
                                                    },
                                                    "flags": {
                                                        "type": "array",
                                                        "title": "Flags",
                                                        "description": "A list of user-defined Flags to use for the status check. The combined coverage from those flags will be reported.",
                                                        "items": {
                                                            "type": "string",
                                                            "pattern": "^[^\\'\\\"]{1,1024}$"
                                                        }
                                                    },
                                                    "base": {
                                                        "enum": [
                                                            "parent",
                                                            "pr",
                                                            "auto"
                                                        ],
                                                        "title": "Base",
                                                        "description": "The base commit type to which you would like to send notifications. Options include: 'parent', 'pr', and 'auto'. parent: compare the commit being notified on, to its direct parent. 'pr': compare the commit being notified on, to the base of a PR if the commit is in a PR. 'auto': automatically choose the appropriate comparison. If the commit being notified on is in a PR, pr will be used, otherwise parent will be used. This is the default."
                                                    },
                                                    "branches": {
                                                        "type": "array",
                                                        "title": "Branches",
                                                        "description": "A list of the branches that, when used, will trigger this status.",
                                                        "items": {
                                                            "type": "string",
                                                            "nullable": true,
                                                            "coerce": "branch_name"
                                                        }
                                                    },
                                                    "disable_approx": {
                                                        "title": "Disable approx",
                                                        "description": "Deprecated",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "enabled": {
                                                        "title": "Enabled",
                                                        "description": "Deprecated",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "if_ci_failed": {
                                                        "enum": [
                                                            "success",
                                                            "failure",
                                                            "error",
                                                            "ignore"
                                                        ],
                                                        "title": "If ci failed",
                                                        "description": "Options include: `error` (default) and `success`. `error` will set the Codecov status to success only if the CI is also successful. `success` will set the Codecov status to success even if CI fails"
                                                    },
                                                    "if_no_uploads": {
                                                        "enum": [
                                                            "success",
                                                            "failure",
                                                            "error",
                                                            "ignore"
                                                        ],
                                                        "title": "If no uploads",
                                                        "description": "Deprecated"
                                                    },
                                                    "if_not_found": {
                                                        "enum": [
                                                            "success",
                                                            "failure",
                                                            "error",
                                                            "ignore"
                                                        ],
                                                        "title": "If not found",
                                                        "description": "Options include: `success` (default) and `failure`. `success` will pass if there is no report for the HEAD commit. Use this on commits/PRs where you won't be uploading coverage but still want Codecov status checks to pass. `error` will fail if there is no report for the HEAD commit."
                                                    },
                                                    "informational": {
                                                        "title": "Informational",
                                                        "description": "Use Codecov in informational mode. Default is `false`. If `true` is specified the resulting status will pass no matter what the coverage is or what other settings are specified.",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "measurement": {
                                                        "enum": [
                                                            "line",
                                                            "statement",
                                                            "branch",
                                                            "method",
                                                            "complexity"
                                                        ],
                                                        "title": "Measurement",
                                                        "description": "Specify the type of coverage measurement. Options include: `line`, `statement`, `branch`, `method`, `complexity`"
                                                    },
                                                    "only_pulls": {
                                                        "title": "Only pulls",
                                                        "description": "True / False binary to specify if you only want notifications to fire on pull requests (vs. individual commits on the branch). Default is `false`, which will notify on all new commits.",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "skip_if_assumes": {
                                                        "title": "Skip if assumes",
                                                        "description": "Deprecated",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "removed_code_behavior": {
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "enum": [
                                                                    true,
                                                                    false,
                                                                    "yes",
                                                                    "no",
                                                                    "on",
                                                                    "off"
                                                                ]
                                                            }
                                                        ],
                                                        "enum": [
                                                            "removals_only",
                                                            "adjust_base",
                                                            "fully_covered_patch",
                                                            "off",
                                                            false
                                                        ],
                                                        "title": "Removed code behavior",
                                                        "description": "Specify the behavior if coverage drops due to code removal. Options include: `removals_only`, `adjust_base`, `fully_covered_patch`, `off`, and `False`. [More details](https://.codecov.com//commit-status#removed_code_behavior)"
                                                    },
                                                    "paths": {
                                                        "type": "array",
                                                        "title": "Paths",
                                                        "description": "Similar to `flags`, a list of paths and/or regular expressions to use for the status check. The combined coverage from files that match will be reported.",
                                                        "items": {
                                                            "type": "string",
                                                            "coerce": "regexify_path_pattern"
                                                        }
                                                    },
                                                    "carryforward_behavior": {
                                                        "enum": [
                                                            "include",
                                                            "exclude",
                                                            "pass"
                                                        ],
                                                        "title": "Carryforward behavior",
                                                        "description": "Determines how we handle status checks for which flags that were carried forward. This is useful if, for example, you're working on a project in a monorepo and don't want to see status checks related to other projects. Note that this only applies to status checks that specify flags. If there are no flags on a check, the status check will be processed as usual.  Options include: a.) 'include': (default) All the status checks defined in the YAML file will be processed and sent as normal b.) 'exclude': Status checks that carried forward coverage will not be included c.) 'pass': Status checks that have carried forward coverage will pass automatically."
                                                    },
                                                    "flag_coverage_not_uploaded_behavior": {
                                                        "enum": [
                                                            "include",
                                                            "exclude",
                                                            "pass"
                                                        ],
                                                        "title": "Flag coverage not uploaded behavior",
                                                        "description": "Determines how to handle status checks for which no flag coverage (including carryforward flags) has been newly uploaded on a commit. Options include: `include`: (default) All the status checks defined in the YAML file will be processed and sent as normal. `exclude`: Status checks that haven't newly uploaded any flag coverage will not be sent. `pass`: Status checks that haven't newly uploaded any flag coverage will be passed automatically. [More information](https://.codecov.com//commit-status#flag_coverage_not_uploaded_behavior)"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "unevaluatedProperties": false
                                        },
                                        {
                                            "enum": [
                                                true,
                                                false,
                                                "yes",
                                                "no",
                                                "on",
                                                "off"
                                            ]
                                        }
                                    ],
                                    "title": "Project",
                                    "description": "Contains the configuration for a given project status check. Setting to False will disable the project status check."
                                },
                                "patch": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "target": {
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "number"
                                                            }
                                                        ],
                                                        "coerce": "percentage_to_number_or_auto",
                                                        "title": "Target",
                                                        "description": "Set the patch status check to a number (80), percent (80%), or `auto`. This specifies the minimum coverage number accepted by this patch status check. Setting to `auto` will compare coverage against the BASE commit.",
                                                        "anyOf": [
                                                            {
                                                                "enum": [
                                                                    "auto"
                                                                ]
                                                            },
                                                            {
                                                                "pattern": "(\\d+)(\\.\\d+)?%?"
                                                            }
                                                        ]
                                                    },
                                                    "include_changes": {
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "number"
                                                            }
                                                        ],
                                                        "coerce": "percentage_to_number_or_auto",
                                                        "title": "Include changes",
                                                        "description": "Deprecated",
                                                        "anyOf": [
                                                            {
                                                                "enum": [
                                                                    "auto"
                                                                ]
                                                            },
                                                            {
                                                                "pattern": "(\\d+)(\\.\\d+)?%?"
                                                            }
                                                        ]
                                                    },
                                                    "threshold": {
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "type": "number"
                                                            }
                                                        ],
                                                        "pattern": "(\\d+)(\\.\\d+)?%?",
                                                        "coerce": "percentage_to_number",
                                                        "title": "Threshold",
                                                        "description": "Allow coverage to drop by x% below the target and still pass the status check."
                                                    },
                                                    "flags": {
                                                        "type": "array",
                                                        "title": "Flags",
                                                        "description": "A list of user-defined Flags to use for the status check. The combined coverage from those flags will be reported.",
                                                        "items": {
                                                            "type": "string",
                                                            "pattern": "^[^\\'\\\"]{1,1024}$"
                                                        }
                                                    },
                                                    "base": {
                                                        "enum": [
                                                            "parent",
                                                            "pr",
                                                            "auto"
                                                        ],
                                                        "title": "Base",
                                                        "description": "The base commit type to which you would like to send notifications. Options include: 'parent', 'pr', and 'auto'. parent: compare the commit being notified on, to its direct parent. 'pr': compare the commit being notified on, to the base of a PR if the commit is in a PR. 'auto': automatically choose the appropriate comparison. If the commit being notified on is in a PR, pr will be used, otherwise parent will be used. This is the default."
                                                    },
                                                    "branches": {
                                                        "type": "array",
                                                        "title": "Branches",
                                                        "description": "A list of the branches that, when used, will trigger this status.",
                                                        "items": {
                                                            "type": "string",
                                                            "nullable": true,
                                                            "coerce": "branch_name"
                                                        }
                                                    },
                                                    "disable_approx": {
                                                        "title": "Disable approx",
                                                        "description": "Deprecated",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "enabled": {
                                                        "title": "Enabled",
                                                        "description": "Deprecated",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "if_ci_failed": {
                                                        "enum": [
                                                            "success",
                                                            "failure",
                                                            "error",
                                                            "ignore"
                                                        ],
                                                        "title": "If ci failed",
                                                        "description": "Options include: `error` (default) and `success`. `error` will set the Codecov status to success only if the CI is also successful. `success` will set the Codecov status to success even if CI fails"
                                                    },
                                                    "if_no_uploads": {
                                                        "enum": [
                                                            "success",
                                                            "failure",
                                                            "error",
                                                            "ignore"
                                                        ],
                                                        "title": "If no uploads",
                                                        "description": "Deprecated"
                                                    },
                                                    "if_not_found": {
                                                        "enum": [
                                                            "success",
                                                            "failure",
                                                            "error",
                                                            "ignore"
                                                        ],
                                                        "title": "If not found",
                                                        "description": "Options include: `success` (default) and `failure`. `success` will pass if there is no report for the HEAD commit. Use this on commits/PRs where you won't be uploading coverage but still want Codecov status checks to pass. `error` will fail if there is no report for the HEAD commit."
                                                    },
                                                    "informational": {
                                                        "title": "Informational",
                                                        "description": "Use Codecov in informational mode. Default is `false`. If `true` is specified the resulting status will pass no matter what the coverage is or what other settings are specified.",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "measurement": {
                                                        "enum": [
                                                            "line",
                                                            "statement",
                                                            "branch",
                                                            "method",
                                                            "complexity"
                                                        ],
                                                        "title": "Measurement",
                                                        "description": "Specify the type of coverage measurement. Options include: `line`, `statement`, `branch`, `method`, `complexity`"
                                                    },
                                                    "only_pulls": {
                                                        "title": "Only pulls",
                                                        "description": "True / False binary to specify if you only want notifications to fire on pull requests (vs. individual commits on the branch). Default is `false`, which will notify on all new commits.",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "skip_if_assumes": {
                                                        "title": "Skip if assumes",
                                                        "description": "Deprecated",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "removed_code_behavior": {
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "enum": [
                                                                    true,
                                                                    false,
                                                                    "yes",
                                                                    "no",
                                                                    "on",
                                                                    "off"
                                                                ]
                                                            }
                                                        ],
                                                        "enum": [
                                                            "removals_only",
                                                            "adjust_base",
                                                            "fully_covered_patch",
                                                            "off",
                                                            false
                                                        ],
                                                        "title": "Removed code behavior",
                                                        "description": "Specify the behavior if coverage drops due to code removal. Options include: `removals_only`, `adjust_base`, `fully_covered_patch`, `off`, and `False`. See https://.codecov.com//commit-status#removed_code_behavior for more details."
                                                    },
                                                    "paths": {
                                                        "type": "array",
                                                        "title": "Paths",
                                                        "description": "Similar to `flags`, a list of paths and/or regular expressions to use for the status check. The combined coverage from files that match will be reported.",
                                                        "items": {
                                                            "type": "string",
                                                            "coerce": "regexify_path_pattern"
                                                        }
                                                    },
                                                    "carryforward_behavior": {
                                                        "enum": [
                                                            "include",
                                                            "exclude",
                                                            "pass"
                                                        ],
                                                        "title": "Carryforward behavior",
                                                        "description": "Determines how we handle status checks for which flags that were carried forward. This is useful if, for example, you're working on a project in a monorepo and don't want to see status checks related to other projects. Note that this only applies to status checks that specify flags. If there are no flags on a check, the status check will be processed as usual.  Options include: a.) 'include': (default) All the status checks defined in the YAML file will be processed and sent as normal b.) 'exclude': Status checks that carried forward coverage will not be included c.) 'pass': Status checks that have carried forward coverage will pass automatically."
                                                    },
                                                    "flag_coverage_not_uploaded_behavior": {
                                                        "enum": [
                                                            "include",
                                                            "exclude",
                                                            "pass"
                                                        ],
                                                        "title": "Flag coverage not uploaded behavior",
                                                        "description": "Determines how to handle status checks for which no flag coverage (including carryforward flags) has been newly uploaded on a commit. Options include: `include`: (default) All the status checks defined in the YAML file will be processed and sent as normal. `exclude`: Status checks that haven't newly uploaded any flag coverage will not be sent. `pass`: Status checks that haven't newly uploaded any flag coverage will be passed automatically. [More information](https://.codecov.com//commit-status#flag_coverage_not_uploaded_behavior)"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "unevaluatedProperties": false
                                        },
                                        {
                                            "enum": [
                                                true,
                                                false,
                                                "yes",
                                                "no",
                                                "on",
                                                "off"
                                            ]
                                        }
                                    ],
                                    "title": "Patch",
                                    "description": "Contains the configuration for a given patch status check. Setting to False will disable the patch status check."
                                },
                                "changes": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "flags": {
                                                        "type": "array",
                                                        "title": "Flags",
                                                        "description": "A list of user-defined Flags to use for the changes check. The combined coverage from those flags will be reported. Flag names must match pattern: ^[\\w\\.\\-]{1,45}$",
                                                        "items": {
                                                            "type": "string",
                                                            "pattern": "^[^\\'\\\"]{1,1024}$"
                                                        }
                                                    },
                                                    "base": {
                                                        "enum": [
                                                            "parent",
                                                            "pr",
                                                            "auto"
                                                        ],
                                                        "title": "Base",
                                                        "description": "[Deprecated] Base picking approach to use for changes statues. Options include: 'parent', 'pr', 'auto'. It is recommended to use [Codecov CLI's base picking feature](https://.codecov.com//cli-options#pr-base-picking) instead."
                                                    },
                                                    "branches": {
                                                        "type": "array",
                                                        "title": "Branches",
                                                        "description": "The branches for which the changes status will be active. Nullable.",
                                                        "items": {
                                                            "type": "string",
                                                            "nullable": true,
                                                            "coerce": "branch_name"
                                                        }
                                                    },
                                                    "disable_approx": {
                                                        "title": "Disable approx",
                                                        "description": "Deprecated",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "enabled": {
                                                        "title": "Enabled",
                                                        "description": "Deprecated",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "if_ci_failed": {
                                                        "enum": [
                                                            "success",
                                                            "failure",
                                                            "error",
                                                            "ignore"
                                                        ],
                                                        "title": "If ci failed",
                                                        "description": "The status to send if CI fails. Options include: 'success', 'failure'. On error Codecov will on set a passing status if CI passes, on success Codecov will set the status to success even if CI fails."
                                                    },
                                                    "if_no_uploads": {
                                                        "enum": [
                                                            "success",
                                                            "failure",
                                                            "error",
                                                            "ignore"
                                                        ],
                                                        "title": "If no uploads",
                                                        "description": "Deprecated"
                                                    },
                                                    "if_not_found": {
                                                        "enum": [
                                                            "success",
                                                            "failure",
                                                            "error",
                                                            "ignore"
                                                        ],
                                                        "title": "If not found",
                                                        "description": "The status to send if there is no report for the head. Options include: 'failure', 'success'. 'failure': the status will fail if there is no report for the head. 'success': the status will pass if there is no report for the head. Use this on commits / PRs where you won't be uploading coverage but still want codecov status checks to pass."
                                                    },
                                                    "informational": {
                                                        "title": "Informational",
                                                        "description": "Use Codecov in informational mode. Default is `false`. If `true` is specified the resulting status will pass no matter what the coverage is or what other settings are specified.",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "measurement": {
                                                        "enum": [
                                                            "line",
                                                            "statement",
                                                            "branch",
                                                            "method",
                                                            "complexity"
                                                        ],
                                                        "title": "Measurement",
                                                        "description": "Specify the type of coverage measurement. Options include: `line`, `statement`, `branch`, `method`, `complexity`"
                                                    },
                                                    "only_pulls": {
                                                        "title": "Only pulls",
                                                        "description": "True / False binary to specify if you only want notifications to fire on pull requests (vs. individual commits on the branch). Default is `false`, which will notify on all new commits.",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "skip_if_assumes": {
                                                        "title": "Skip if assumes",
                                                        "description": "Deprecated",
                                                        "enum": [
                                                            true,
                                                            false,
                                                            "yes",
                                                            "no",
                                                            "on",
                                                            "off"
                                                        ]
                                                    },
                                                    "removed_code_behavior": {
                                                        "oneOf": [
                                                            {
                                                                "type": "string"
                                                            },
                                                            {
                                                                "enum": [
                                                                    true,
                                                                    false,
                                                                    "yes",
                                                                    "no",
                                                                    "on",
                                                                    "off"
                                                                ]
                                                            }
                                                        ],
                                                        "enum": [
                                                            "removals_only",
                                                            "adjust_base",
                                                            "fully_covered_patch",
                                                            "off",
                                                            false
                                                        ],
                                                        "title": "Removed code behavior",
                                                        "description": "These behaviors allow users to specify what should happen to the project status in case changes causes overall coverage to drop, but are part of good development practices. Options include: 'removals_only', 'adjust_base', 'fully_covered_patch', 'off', 'False'. [More information](https://.codecov.com//commit-status#removed_code_behavior)"
                                                    },
                                                    "paths": {
                                                        "type": "array",
                                                        "title": "Paths",
                                                        "description": "Paths to consider when determining the status result. [More information](https://.codecov.com//commit-status#paths)",
                                                        "items": {
                                                            "type": "string",
                                                            "coerce": "regexify_path_pattern"
                                                        }
                                                    },
                                                    "carryforward_behavior": {
                                                        "enum": [
                                                            "include",
                                                            "exclude",
                                                            "pass"
                                                        ],
                                                        "title": "Carryforward behavior",
                                                        "description": "Determines how we handle status checks for which flags that were carried forward. This is useful if, for example, you're working on a project in a monorepo and don't want to see status checks related to other projects. Note that this only applies to status checks that specify flags. If there are no flags on a check, the status check will be processed as usual.  Options include: a.) 'include': (default) All the status checks defined in the YAML file will be processed and sent as normal b.) 'exclude': Status checks that carried forward coverage will not be included c.) 'pass': Status checks that have carried forward coverage will pass automatically."
                                                    },
                                                    "flag_coverage_not_uploaded_behavior": {
                                                        "enum": [
                                                            "include",
                                                            "exclude",
                                                            "pass"
                                                        ],
                                                        "title": "Flag coverage not uploaded behavior",
                                                        "description": "Determines how we handle status checks for which no flag coverage has been newly uploaded on a commit. Options include: 'include', 'exclude', 'pass'. [More information](https://.codecov.com//commit-status#flag_coverage_not_uploaded_behavior)"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "unevaluatedProperties": false
                                        },
                                        {
                                            "enum": [
                                                true,
                                                false,
                                                "yes",
                                                "no",
                                                "on",
                                                "off"
                                            ]
                                        }
                                    ],
                                    "title": "Changes",
                                    "description": "Codecov will detect changes in coverage that are NOT included in the commit/pull diff, and report these changes as a commit status. [More information](https://.codecov.com//commit-status#changes-status)"
                                },
                                "no_upload_behavior": {
                                    "enum": [
                                        "pass",
                                        "fail"
                                    ],
                                    "title": "No upload behavior",
                                    "description": ""
                                }
                            }
                        }
                    ],
                    "title": "Status",
                    "description": "Configuration for various status checks supported in Codecov. Useful for blocking Pull Requests that don't meet a particular coverage threshold. [More information](https://.codecov.com//commit-status)"
                }
            },
            "title": "Coverage",
            "description": "Configuration options that determine how Codecov calculates and reports on code coverage metrics."
        },
        "bundle_analysis": {
            "type": "object",
            "properties": {
                "warning_threshold": {
                    "coerce": "bundle_analysis_threshold",
                    "meta": {
                        "description": "If the change is bigger then the threshold notification includes a warning or fails. See `bundle_analysis.status` for details."
                    },
                    "title": "Warning threshold",
                    "description": ""
                },
                "status": {
                    "enum": [
                        true,
                        false,
                        "informational"
                    ],
                    "meta": {
                        "description": "Configure commit checks for bundle analysis",
                        "options": {
                            "true": {
                                "type": 